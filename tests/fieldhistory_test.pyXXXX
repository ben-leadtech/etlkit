"""
Tests specific to FieldHistoryPipeline
"""
import pandas as pd
from src.etlkit._baseclasses import Data
from src.etlkit._wranglers import FieldHistoryWrangler

#==============================================================================#

#______________________________________________________________________________#
class TestFieldHistoryWrangler():

	# Initialize the wrangler
	wrangler = FieldHistoryWrangler()


	# Create dummy data
	dummy_df_fh = pd.DataFrame({
		'Id': ['0010X00004Z1i9EQAR', '0010X00004Z1i9EQAR', '0010X00004Z1i9EQAR'],
		'OpportunityId': ['0060X00001Z1i9EQAR', '0060X00001Z1i9EQAR', '0060X00001Z1i9EQAR'],
		'CreatedDate': ['2020-01-01', '2020-01-02', '2020-01-03'],
		'OldValue': ['OldValue1', 'OldValue2', 'OldValue3'],
		'NewValue': ['NewValue1', 'NewValue2', 'NewValue3']
	})

	dummy_df_opps = pd.DataFrame({
		'Id': ['0060X00001Z1i9EQAR'],
		'Partner_Lead_ID__c': ['Partner_Lead_ID__c1'],
		'CreatedDate': ['2020-01-01']
	})

	dummy_data = Data()
	dummy_data.df_fh = dummy_df_fh
	dummy_data.df_opps = dummy_df_opps
	wrangler.data = dummy_data


	#___________________________________________________________________________#
	def test_ohe_fh(self):
		"""
		Test the ohe_fh function
		"""
		# Run the function
		self.wrangler.ohe_fh()
		output = self.wrangler.data.final

		# Check the output
		assert isinstance(output, pd.DataFrame)
		assert output.columns.tolist() == [
			'Id', 'NewValue1', 'NewValue2', 'NewValue3'
		]
		assert output.NewValue3.astype('string').to_list() == ['2020-01-03']


	#___________________________________________________________________________#
	def test_merge_opps(self):
		"""
		Test the merge_opps function
		"""
		# Run the function
		self.wrangler.merge_opps()
		output = self.wrangler.data.final

		# Check the output
		assert isinstance(output, pd.DataFrame)
		cols_to_check = [
			'Id','Partner_Lead_ID','Created_Date','Unique_ID','NewValue1','NewValue2','NewValue3'
		]
		for col in cols_to_check:
			assert col in output.columns.tolist()
		assert output.NewValue3.to_list() == [2.0]
#==============================================================================#
